{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alanb\\\\Desktop\\\\Portfolio web\\\\devportalan\\\\src\\\\components\\\\header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Tabs, Tab } from '@mui/material';\n//import LogoEmpresa from '../assets/iconab.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ColorTabs() {\n  _s();\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [isScrolled, setIsScrolled] = useState(false);\n  const handleChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n  const handleLinkClick = target => {\n    const targetElement = document.getElementById(target);\n    if (targetElement) {\n      const targetOffset = targetElement.offsetTop;\n      window.scrollTo({\n        top: targetOffset,\n        behavior: 'smooth'\n      });\n    }\n  };\n  useEffect(() => {\n    const handleScroll = () => {\n      const windowHeight = window.innerHeight;\n      const aboutMeElement = document.getElementById('about-me');\n      const projectsElement = document.getElementById('my-projects');\n      const contactElement = document.getElementById('contact-me');\n      const aboutMeOffset = aboutMeElement.getBoundingClientRect().top;\n      const projectsOffset = projectsElement.getBoundingClientRect().top;\n      const contactOffset = contactElement.getBoundingClientRect().top;\n      if (aboutMeOffset >= 0 && aboutMeOffset < windowHeight) {\n        setSelectedTab(0);\n      } else if (projectsOffset >= 0 && projectsOffset < windowHeight) {\n        setSelectedTab(1);\n      } else if (contactOffset >= 0 && contactOffset < windowHeight) {\n        setSelectedTab(2);\n      }\n      if (window.scrollY > 0) {\n        setIsScrolled(true);\n      } else {\n        setIsScrolled(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    textColor: \"white\",\n    sx: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      zIndex: 1000,\n      display: 'flex',\n      justifyContent: 'center',\n      width: '100%',\n      backgroundColor: isScrolled ? 'rgba(0, 0, 0, 0.5)' : 'transparent',\n      backdropFilter: isScrolled ? 'blur(10px)' : 'none' // Aplica el efecto de desenfoque solo cuando se ha hecho scroll\n    },\n    children: /*#__PURE__*/_jsxDEV(Tabs, {\n      value: selectedTab,\n      onChange: handleChange,\n      indicatorColor: \"secondary\",\n      \"aria-label\": \"secondary tabs example\",\n      textColor: \"white\",\n      sx: {\n        '& .Mui-selected': {\n          color: 'white',\n          backgroundColor: 'transparent'\n        },\n        '& .MuiTabs-indicator': {\n          backgroundColor: 'secondary.main'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Sobre mi\",\n        onClick: () => handleLinkClick('about-me')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Proyectos\",\n        onClick: () => handleLinkClick('my-projects')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Contacto\",\n        onClick: () => handleLinkClick('contact-me')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(ColorTabs, \"PRSqPKO7RAKLkU214/m32KKr6NI=\");\n_c = ColorTabs;\nvar _c;\n$RefreshReg$(_c, \"ColorTabs\");","map":{"version":3,"names":["React","useState","useEffect","Box","Tabs","Tab","jsxDEV","_jsxDEV","ColorTabs","_s","selectedTab","setSelectedTab","isScrolled","setIsScrolled","handleChange","event","newValue","handleLinkClick","target","targetElement","document","getElementById","targetOffset","offsetTop","window","scrollTo","top","behavior","handleScroll","windowHeight","innerHeight","aboutMeElement","projectsElement","contactElement","aboutMeOffset","getBoundingClientRect","projectsOffset","contactOffset","scrollY","addEventListener","removeEventListener","textColor","sx","position","left","zIndex","display","justifyContent","width","backgroundColor","backdropFilter","children","value","onChange","indicatorColor","color","label","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alanb/Desktop/Portfolio web/devportalan/src/components/header.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Tabs, Tab } from '@mui/material';\r\n//import LogoEmpresa from '../assets/iconab.png';\r\n\r\nexport default function ColorTabs() {\r\n    const [selectedTab, setSelectedTab] = useState(0);\r\n    const [isScrolled, setIsScrolled] = useState(false);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setSelectedTab(newValue);\r\n    };\r\n\r\n    const handleLinkClick = (target) => {\r\n        const targetElement = document.getElementById(target);\r\n        if (targetElement) {\r\n            const targetOffset = targetElement.offsetTop;\r\n            window.scrollTo({\r\n                top: targetOffset,\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            const windowHeight = window.innerHeight;\r\n\r\n            const aboutMeElement = document.getElementById('about-me');\r\n            const projectsElement = document.getElementById('my-projects');\r\n            const contactElement = document.getElementById('contact-me');\r\n\r\n            const aboutMeOffset = aboutMeElement.getBoundingClientRect().top;\r\n            const projectsOffset = projectsElement.getBoundingClientRect().top;\r\n            const contactOffset = contactElement.getBoundingClientRect().top;\r\n\r\n            if (aboutMeOffset >= 0 && aboutMeOffset < windowHeight) {\r\n                setSelectedTab(0);\r\n            } else if (projectsOffset >= 0 && projectsOffset < windowHeight) {\r\n                setSelectedTab(1);\r\n            } else if (contactOffset >= 0 && contactOffset < windowHeight) {\r\n                setSelectedTab(2);\r\n            }\r\n\r\n            if (window.scrollY > 0) {\r\n                setIsScrolled(true);\r\n            } else {\r\n                setIsScrolled(false);\r\n            }\r\n\r\n        };\r\n\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <Box\r\n            textColor=\"white\"\r\n            sx={{\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                zIndex: 1000,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                width: '100%',\r\n                backgroundColor: isScrolled ? 'rgba(0, 0, 0, 0.5)' : 'transparent',\r\n                backdropFilter: isScrolled ? 'blur(10px)' : 'none', // Aplica el efecto de desenfoque solo cuando se ha hecho scroll\r\n            }}\r\n        >\r\n            <Tabs\r\n                value={selectedTab}\r\n                onChange={handleChange}\r\n                indicatorColor=\"secondary\"\r\n                aria-label=\"secondary tabs example\"\r\n                textColor=\"white\"\r\n                sx={{ '& .Mui-selected': { color: 'white', backgroundColor: 'transparent' }, '& .MuiTabs-indicator': { backgroundColor: 'secondary.main' } }}\r\n            >\r\n                <Tab\r\n                    label=\"Sobre mi\"\r\n                    onClick={() => handleLinkClick('about-me')}\r\n                />\r\n                <Tab\r\n                    label=\"Proyectos\"\r\n                    onClick={() => handleLinkClick('my-projects')}\r\n                />\r\n                <Tab\r\n                    label=\"Contacto\"\r\n                    onClick={() => handleLinkClick('contact-me')}\r\n                />\r\n            </Tabs>\r\n        </Box>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}